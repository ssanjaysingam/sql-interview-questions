1/ Find the second highest salary without using LIMIT, OFFSET, or TOP.
2/ Given a table of orders, write a query to find the running total (cumulative sum) of revenue for each day.
3/ Write an SQL query to identify employees who earn more than their managers.
4/ Find the top N customers who made the highest purchases, ensuring no duplicates if customers have the same purchase amount.
5/ Identify consecutive login streaks for users where they logged in for at least three consecutive days.
6/ Write an efficient query to detect duplicate records in a table and delete only the extra duplicates, keeping one copy.
7/ You have a table with millions of records. How would you optimize a slow-performing query that involves multiple joins and aggregations?
8/ Retrieve the first order for each customer, ensuring that ties (customers with multiple first orders on the same date) are handled correctly.
9/ Find products that were never purchased by any customer.
10/ Given a table with customer transactions, find customers who made transactions in every month of the year.
11/ Find employees who have the same salary as another employee in the same department.
12/ Write an SQL query to retrieve the department with the highest total salary paid to employees.
13/ Use a window function to rank orders based on order value for each customer, and return only the top 3 orders per customer.
14/ Find the median salary of employees using SQL (without using built-in median functions).
15/ Write a query to pivot a table where each row represents a sales transaction and transform it into a summary format where each column represents a month.
16/ Find the moving average of sales for the last 7 days for each product in a sales table.
17/ Given an events table, find the first and last occurrence of each event per user.
18/ Identify users who have placed an order in two consecutive months but not in the third month.
19/ Find the most frequently purchased product category by each user over the past year.
